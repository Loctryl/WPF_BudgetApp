// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPF_BudgetApp.Data;

#nullable disable

namespace WPF_BudgetApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Account", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.AppUser", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.ArchivedTransfer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<float>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ArchivedTransfers", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Category", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("CurrentMonthValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("GoalPerMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsEarning")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LastMonthValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Debt", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("CurrentDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("InitialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LimitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Debt", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.ProjectionTransfer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMonthly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProjectionTransfers", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Transfer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Reviewed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transfers", (string)null);
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Account", b =>
                {
                    b.HasOne("WPF_BudgetApp.Data.Models.AppUser", "AppUser")
                        .WithMany("Accounts")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Category", b =>
                {
                    b.HasOne("WPF_BudgetApp.Data.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Debt", b =>
                {
                    b.HasOne("WPF_BudgetApp.Data.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPF_BudgetApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.ProjectionTransfer", b =>
                {
                    b.HasOne("WPF_BudgetApp.Data.Models.Account", "Account")
                        .WithMany("ProjectionTransfers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPF_BudgetApp.Data.Models.Category", "Category")
                        .WithMany("ProjectionTransfers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Transfer", b =>
                {
                    b.HasOne("WPF_BudgetApp.Data.Models.Account", "Account")
                        .WithMany("Transfers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPF_BudgetApp.Data.Models.Category", "Category")
                        .WithMany("Transfers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Account", b =>
                {
                    b.Navigation("ProjectionTransfers");

                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.AppUser", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WPF_BudgetApp.Data.Models.Category", b =>
                {
                    b.Navigation("ProjectionTransfers");

                    b.Navigation("Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
